{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let SampleComponent = /*#__PURE__*/(() => {\n  class SampleComponent {\n    constructor() {\n      this.emitDataToParent = new EventEmitter();\n      this.ifLoaded = false;\n    }\n\n    send() {\n      this.emitDataToParent.emit(this.input);\n      this.input = '';\n    }\n\n    ngOnInit() {\n      if (this.ifLoaded) {\n        // this code is only going to be run once\n        console.log(this.dataFromParent);\n        this.workstationid = localStorage.getItem('WorkStationId');\n        this.officeid = localStorage.getItem('OfficeId');\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (!this.ifLoaded) {\n        this.ifLoaded = true;\n        this.ngOnInit();\n      } // any code that needs to be run every time a change is made\n\n    }\n\n  }\n\n  SampleComponent.ɵfac = function SampleComponent_Factory(t) {\n    return new (t || SampleComponent)();\n  };\n\n  SampleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SampleComponent,\n    selectors: [[\"app-sample\"]],\n    inputs: {\n      dataFromParent: \"dataFromParent\"\n    },\n    outputs: {\n      emitDataToParent: \"emitDataToParent\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 12,\n    vars: 5,\n    consts: [[2, \"border\", \"blue solid 1px\"], [3, \"ngModel\", \"value\", \"ngModelChange\", \"keydown.enter\"]],\n    template: function SampleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2, \"Micro App\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"Data from Parent from LocalStorage:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function SampleComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.input = $event;\n        })(\"keydown.enter\", function SampleComponent_Template_input_keydown_enter_11_listener() {\n          return ctx.send();\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Data from Parent via EventEmitter: \", ctx.dataFromParent, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Workstation Id: \", ctx.workstationid, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Office Id: \", ctx.officeid, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.input)(\"value\", ctx.input);\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n  return SampleComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}